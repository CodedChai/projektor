on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Release

jobs:
  build:
    name: Create and upload release
    runs-on: ubuntu-latest
    services:
      database:
        image: postgres:11.2-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: projektordb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Use Node.js 10
        uses: actions/setup-node@v1
        with:
          node-version: 10
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Set env
        run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:11})
      - name: ui install
        run: |
          cd ui
          yarn install
      - name: Build project
        run: |
          ./gradlew :server:server-app:shadowJar
      - name: cypress-common install
        run: |
          cd cypress-common
          yarn install
      - name: functional-test install
        run: |
          cd functional-test
          yarn install
      - name: Run functional tests
        env:
          DB_URL: "jdbc:postgresql://localhost:5432/projektordb"
        run: ./gradlew :functional-test:functionalTest
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./server/server-app/build/libs/server-app-1.0-all.jar
          asset_name: projektor-server-${{ env.RELEASE_VERSION }}.jar
          asset_content_type: application/java-archive
