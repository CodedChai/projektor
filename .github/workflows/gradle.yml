name: CI check

on: [push]

jobs:
  gradle-build:
    runs-on: ubuntu-latest
    services:
      database:
        image: postgres:11.2-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: projektordb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Cache Gradle dependencies
      uses: actions/cache@v1
      with:
        path: ~/.gradle
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle
    - name: Build with Gradle
      env:
        DB_URL: "jdbc:postgresql://localhost:5432/projektordb"
        GPR_USER: ${{ secrets.GPR_USER }}
        GPR_API_KEY: ${{ secrets.GPR_KEY }}
      run: ./gradlew check

  node-script-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js 10
      uses: actions/setup-node@v1
      with:
        node-version: 10
    - name: node-script test
      run: |
        cd publishers/node-script
        yarn install
        yarn test

  ui-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js 10
      uses: actions/setup-node@v1
      with:
        node-version: 10

    - name: ui test
      run: |
        cd ui
        yarn install
        yarn test

    - name: cypress-common install
      run: |
        cd cypress-common
        yarn install

    - name: ui cypress
      run: |
        cd ui
        yarn install
        yarn cy:test

  assemble-and-functional-test:
    runs-on: ubuntu-latest
    services:
      database:
        image: postgres:11.2-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: projektordb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js 10
      uses: actions/setup-node@v1
      with:
        node-version: 10
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: ui install
      run: |
        cd ui
        yarn install
    - name: cypress-common install
      run: |
        cd cypress-common
        yarn install
    - name: functional-test install
      run: |
        cd functional-test
        yarn install
    - name: Run functional tests
      env:
        DB_URL: "jdbc:postgresql://localhost:5432/projektordb"
      run: ./gradlew :functional-test:functionalTest
