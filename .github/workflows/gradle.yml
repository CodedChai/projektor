name: CI check

on: [push]

jobs:
  gradle-build:
    runs-on: ubuntu-18.04
    services:
      database:
        image: postgres:11.2-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: projektordb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      objectstorage:
        image: bitnami/minio:2020.2.20-debian-10-r1
        ports:
          - "9000:9000"
        volumes:
          - ./minio:/data
        env:
          MINIO_ACCESS_KEY: minio_access_key
          MINIO_SECRET_KEY: minio_secret_key

    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Cache Gradle dependencies
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches/modules-2
        key: ${{ runner.os }}-gradle-modules-${{ hashFiles('**/*gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-modules-
    - name: Build with Gradle
      env:
        DB_URL: "jdbc:postgresql://localhost:5432/projektordb"
        PROJEKTOR_TOKEN: ${{ secrets.PROJEKTOR_TOKEN }}
      run: ./gradlew check

  ui-test:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: Install Cypress dependencies
      run: |
        sudo apt-get install xvfb libgtk2.0-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2
    - name: Install Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 12

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v1
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-all-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-all-yarn-

    - name: ui test
      env:
        PROJEKTOR_TOKEN: ${{ secrets.PROJEKTOR_TOKEN }}
      run: |
        cd ui
        yarn install
        yarn test
        yarn projektor-publish --configFile=projektor.jest.json

    - name: cypress-common install
      run: |
        cd cypress-common
        yarn install

    - name: ui install
      run: |
        cd ui
        yarn install

    - name: UI Cypress run
      env:
        PROJEKTOR_TOKEN: ${{ secrets.PROJEKTOR_TOKEN }}
      run: |
        cd ui
        yarn cy:test
        yarn projektor-publish --configFile=projektor.cypress.json

  assemble-and-functional-test:
    runs-on: ubuntu-18.04
    services:
      database:
        image: postgres:11.2-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: projektordb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      objectstorage:
        image: bitnami/minio:2020.2.20-debian-10-r1
        ports:
          - "9000:9000"
        volumes:
          - ./minio:/data
        env:
          MINIO_ACCESS_KEY: minio_access_key
          MINIO_SECRET_KEY: minio_secret_key

    steps:
    - uses: actions/checkout@v1
    - name: Install Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 12
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Install Cypress dependencies
      run: |
        sudo apt-get install xvfb libgtk2.0-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2
#    - name: Cache UI Node dependencies
#      uses: actions/cache@v1
#      with:
#        path: ui/node_modules
#        key: ${{ runner.os }}-ui-node-modules-${{ hashFiles('ui/yarn.lock') }}
#        restore-keys: |
#          ${{ runner.os }}-ui-node-modules

    - name: ui install
      run: |
        cd ui
        yarn install
    - name: cypress-common install
      run: |
        cd cypress-common
        yarn install
    - name: functional-test install
      run: |
        cd functional-test
        yarn install
    - name: Run functional tests
      env:
        DB_URL: "jdbc:postgresql://localhost:5432/projektordb"
        PROJEKTOR_TOKEN: ${{ secrets.PROJEKTOR_TOKEN }}
      run: ./gradlew :functional-test:functionalTest
