/*
 * This file is generated by jOOQ.
 */
package projektor.database.generated.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import projektor.database.generated.tables.TestRunAccess;
import projektor.database.generated.tables.records.TestRunAccessRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TestRunAccessDao extends DAOImpl<TestRunAccessRecord, projektor.database.generated.tables.pojos.TestRunAccess, Long> {

    /**
     * Create a new TestRunAccessDao without any configuration
     */
    public TestRunAccessDao() {
        super(TestRunAccess.TEST_RUN_ACCESS, projektor.database.generated.tables.pojos.TestRunAccess.class);
    }

    /**
     * Create a new TestRunAccessDao with an attached configuration
     */
    public TestRunAccessDao(Configuration configuration) {
        super(TestRunAccess.TEST_RUN_ACCESS, projektor.database.generated.tables.pojos.TestRunAccess.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(projektor.database.generated.tables.pojos.TestRunAccess object) {
        return object.getTestRunId();
    }

    /**
     * Fetch records that have <code>test_run_id IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestRunAccess> fetchByTestRunId(Long... values) {
        return fetch(TestRunAccess.TEST_RUN_ACCESS.TEST_RUN_ID, values);
    }

    /**
     * Fetch a unique record that has <code>test_run_id = value</code>
     */
    public projektor.database.generated.tables.pojos.TestRunAccess fetchOneByTestRunId(Long value) {
        return fetchOne(TestRunAccess.TEST_RUN_ACCESS.TEST_RUN_ID, value);
    }

    /**
     * Fetch records that have <code>asset_key IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestRunAccess> fetchByAssetKey(String... values) {
        return fetch(TestRunAccess.TEST_RUN_ACCESS.ASSET_KEY, values);
    }
}
