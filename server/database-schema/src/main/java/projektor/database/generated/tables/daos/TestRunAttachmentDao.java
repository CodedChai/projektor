/*
 * This file is generated by jOOQ.
 */
package projektor.database.generated.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import projektor.database.generated.tables.TestRunAttachment;
import projektor.database.generated.tables.records.TestRunAttachmentRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TestRunAttachmentDao extends DAOImpl<TestRunAttachmentRecord, projektor.database.generated.tables.pojos.TestRunAttachment, Long> {

    /**
     * Create a new TestRunAttachmentDao without any configuration
     */
    public TestRunAttachmentDao() {
        super(TestRunAttachment.TEST_RUN_ATTACHMENT, projektor.database.generated.tables.pojos.TestRunAttachment.class);
    }

    /**
     * Create a new TestRunAttachmentDao with an attached configuration
     */
    public TestRunAttachmentDao(Configuration configuration) {
        super(TestRunAttachment.TEST_RUN_ATTACHMENT, projektor.database.generated.tables.pojos.TestRunAttachment.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(projektor.database.generated.tables.pojos.TestRunAttachment object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestRunAttachment> fetchById(Long... values) {
        return fetch(TestRunAttachment.TEST_RUN_ATTACHMENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public projektor.database.generated.tables.pojos.TestRunAttachment fetchOneById(Long value) {
        return fetchOne(TestRunAttachment.TEST_RUN_ATTACHMENT.ID, value);
    }

    /**
     * Fetch records that have <code>test_run_id IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestRunAttachment> fetchByTestRunId(Long... values) {
        return fetch(TestRunAttachment.TEST_RUN_ATTACHMENT.TEST_RUN_ID, values);
    }

    /**
     * Fetch records that have <code>file_name IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestRunAttachment> fetchByFileName(String... values) {
        return fetch(TestRunAttachment.TEST_RUN_ATTACHMENT.FILE_NAME, values);
    }

    /**
     * Fetch records that have <code>bucket_name IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestRunAttachment> fetchByBucketName(String... values) {
        return fetch(TestRunAttachment.TEST_RUN_ATTACHMENT.BUCKET_NAME, values);
    }

    /**
     * Fetch records that have <code>file_size IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestRunAttachment> fetchByFileSize(Long... values) {
        return fetch(TestRunAttachment.TEST_RUN_ATTACHMENT.FILE_SIZE, values);
    }
}
