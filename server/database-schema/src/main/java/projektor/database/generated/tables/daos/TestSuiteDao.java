/*
 * This file is generated by jOOQ.
 */
package projektor.database.generated.tables.daos;


import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import projektor.database.generated.tables.TestSuite;
import projektor.database.generated.tables.records.TestSuiteRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TestSuiteDao extends DAOImpl<TestSuiteRecord, projektor.database.generated.tables.pojos.TestSuite, Long> {

    /**
     * Create a new TestSuiteDao without any configuration
     */
    public TestSuiteDao() {
        super(TestSuite.TEST_SUITE, projektor.database.generated.tables.pojos.TestSuite.class);
    }

    /**
     * Create a new TestSuiteDao with an attached configuration
     */
    public TestSuiteDao(Configuration configuration) {
        super(TestSuite.TEST_SUITE, projektor.database.generated.tables.pojos.TestSuite.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(projektor.database.generated.tables.pojos.TestSuite object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestSuite> fetchById(Long... values) {
        return fetch(TestSuite.TEST_SUITE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public projektor.database.generated.tables.pojos.TestSuite fetchOneById(Long value) {
        return fetchOne(TestSuite.TEST_SUITE.ID, value);
    }

    /**
     * Fetch records that have <code>test_run_id IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestSuite> fetchByTestRunId(Long... values) {
        return fetch(TestSuite.TEST_SUITE.TEST_RUN_ID, values);
    }

    /**
     * Fetch records that have <code>idx IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestSuite> fetchByIdx(Integer... values) {
        return fetch(TestSuite.TEST_SUITE.IDX, values);
    }

    /**
     * Fetch records that have <code>package_name IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestSuite> fetchByPackageName(String... values) {
        return fetch(TestSuite.TEST_SUITE.PACKAGE_NAME, values);
    }

    /**
     * Fetch records that have <code>class_name IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestSuite> fetchByClassName(String... values) {
        return fetch(TestSuite.TEST_SUITE.CLASS_NAME, values);
    }

    /**
     * Fetch records that have <code>test_count IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestSuite> fetchByTestCount(Integer... values) {
        return fetch(TestSuite.TEST_SUITE.TEST_COUNT, values);
    }

    /**
     * Fetch records that have <code>passing_count IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestSuite> fetchByPassingCount(Integer... values) {
        return fetch(TestSuite.TEST_SUITE.PASSING_COUNT, values);
    }

    /**
     * Fetch records that have <code>skipped_count IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestSuite> fetchBySkippedCount(Integer... values) {
        return fetch(TestSuite.TEST_SUITE.SKIPPED_COUNT, values);
    }

    /**
     * Fetch records that have <code>failure_count IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestSuite> fetchByFailureCount(Integer... values) {
        return fetch(TestSuite.TEST_SUITE.FAILURE_COUNT, values);
    }

    /**
     * Fetch records that have <code>start_ts IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestSuite> fetchByStartTs(Timestamp... values) {
        return fetch(TestSuite.TEST_SUITE.START_TS, values);
    }

    /**
     * Fetch records that have <code>hostname IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestSuite> fetchByHostname(String... values) {
        return fetch(TestSuite.TEST_SUITE.HOSTNAME, values);
    }

    /**
     * Fetch records that have <code>duration IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestSuite> fetchByDuration(BigDecimal... values) {
        return fetch(TestSuite.TEST_SUITE.DURATION, values);
    }

    /**
     * Fetch records that have <code>system_out IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestSuite> fetchBySystemOut(String... values) {
        return fetch(TestSuite.TEST_SUITE.SYSTEM_OUT, values);
    }

    /**
     * Fetch records that have <code>system_err IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestSuite> fetchBySystemErr(String... values) {
        return fetch(TestSuite.TEST_SUITE.SYSTEM_ERR, values);
    }

    /**
     * Fetch records that have <code>has_system_out IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestSuite> fetchByHasSystemOut(Boolean... values) {
        return fetch(TestSuite.TEST_SUITE.HAS_SYSTEM_OUT, values);
    }

    /**
     * Fetch records that have <code>has_system_err IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestSuite> fetchByHasSystemErr(Boolean... values) {
        return fetch(TestSuite.TEST_SUITE.HAS_SYSTEM_ERR, values);
    }

    /**
     * Fetch records that have <code>test_suite_group_id IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestSuite> fetchByTestSuiteGroupId(Long... values) {
        return fetch(TestSuite.TEST_SUITE.TEST_SUITE_GROUP_ID, values);
    }
}
