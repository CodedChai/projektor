/*
 * This file is generated by jOOQ.
 */
package projektor.database.generated.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import projektor.database.generated.tables.TestSuiteGroup;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TestSuiteGroupRecord extends UpdatableRecordImpl<TestSuiteGroupRecord> implements Record6<Long, Long, String, String, String, String> {

    private static final long serialVersionUID = -1595882028;

    /**
     * Setter for <code>public.test_suite_group.id</code>.
     */
    public TestSuiteGroupRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.test_suite_group.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.test_suite_group.test_run_id</code>.
     */
    public TestSuiteGroupRecord setTestRunId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.test_suite_group.test_run_id</code>.
     */
    public Long getTestRunId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.test_suite_group.group_name</code>.
     */
    public TestSuiteGroupRecord setGroupName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.test_suite_group.group_name</code>.
     */
    public String getGroupName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.test_suite_group.project_name</code>.
     */
    public TestSuiteGroupRecord setProjectName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.test_suite_group.project_name</code>.
     */
    public String getProjectName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.test_suite_group.directory</code>.
     */
    public TestSuiteGroupRecord setDirectory(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.test_suite_group.directory</code>.
     */
    public String getDirectory() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.test_suite_group.path</code>.
     */
    public TestSuiteGroupRecord setPath(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.test_suite_group.path</code>.
     */
    public String getPath() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, Long, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, Long, String, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return TestSuiteGroup.TEST_SUITE_GROUP.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return TestSuiteGroup.TEST_SUITE_GROUP.TEST_RUN_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return TestSuiteGroup.TEST_SUITE_GROUP.GROUP_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return TestSuiteGroup.TEST_SUITE_GROUP.PROJECT_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return TestSuiteGroup.TEST_SUITE_GROUP.DIRECTORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return TestSuiteGroup.TEST_SUITE_GROUP.PATH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getTestRunId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getGroupName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getProjectName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getDirectory();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getPath();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getTestRunId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getGroupName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getProjectName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getDirectory();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getPath();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestSuiteGroupRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestSuiteGroupRecord value2(Long value) {
        setTestRunId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestSuiteGroupRecord value3(String value) {
        setGroupName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestSuiteGroupRecord value4(String value) {
        setProjectName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestSuiteGroupRecord value5(String value) {
        setDirectory(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestSuiteGroupRecord value6(String value) {
        setPath(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestSuiteGroupRecord values(Long value1, Long value2, String value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TestSuiteGroupRecord
     */
    public TestSuiteGroupRecord() {
        super(TestSuiteGroup.TEST_SUITE_GROUP);
    }

    /**
     * Create a detached, initialised TestSuiteGroupRecord
     */
    public TestSuiteGroupRecord(Long id, Long testRunId, String groupName, String projectName, String directory, String path) {
        super(TestSuiteGroup.TEST_SUITE_GROUP);

        set(0, id);
        set(1, testRunId);
        set(2, groupName);
        set(3, projectName);
        set(4, directory);
        set(5, path);
    }
}
