/*
 * This file is generated by jOOQ.
 */
package projektor.database.generated.tables.daos;


import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import projektor.database.generated.tables.TestRun;
import projektor.database.generated.tables.records.TestRunRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TestRunDao extends DAOImpl<TestRunRecord, projektor.database.generated.tables.pojos.TestRun, Long> {

    /**
     * Create a new TestRunDao without any configuration
     */
    public TestRunDao() {
        super(TestRun.TEST_RUN, projektor.database.generated.tables.pojos.TestRun.class);
    }

    /**
     * Create a new TestRunDao with an attached configuration
     */
    public TestRunDao(Configuration configuration) {
        super(TestRun.TEST_RUN, projektor.database.generated.tables.pojos.TestRun.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(projektor.database.generated.tables.pojos.TestRun object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestRun> fetchById(Long... values) {
        return fetch(TestRun.TEST_RUN.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public projektor.database.generated.tables.pojos.TestRun fetchOneById(Long value) {
        return fetchOne(TestRun.TEST_RUN.ID, value);
    }

    /**
     * Fetch records that have <code>public_id IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestRun> fetchByPublicId(String... values) {
        return fetch(TestRun.TEST_RUN.PUBLIC_ID, values);
    }

    /**
     * Fetch a unique record that has <code>public_id = value</code>
     */
    public projektor.database.generated.tables.pojos.TestRun fetchOneByPublicId(String value) {
        return fetchOne(TestRun.TEST_RUN.PUBLIC_ID, value);
    }

    /**
     * Fetch records that have <code>total_test_count IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestRun> fetchByTotalTestCount(Integer... values) {
        return fetch(TestRun.TEST_RUN.TOTAL_TEST_COUNT, values);
    }

    /**
     * Fetch records that have <code>total_passing_count IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestRun> fetchByTotalPassingCount(Integer... values) {
        return fetch(TestRun.TEST_RUN.TOTAL_PASSING_COUNT, values);
    }

    /**
     * Fetch records that have <code>total_skipped_count IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestRun> fetchByTotalSkippedCount(Integer... values) {
        return fetch(TestRun.TEST_RUN.TOTAL_SKIPPED_COUNT, values);
    }

    /**
     * Fetch records that have <code>total_failure_count IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestRun> fetchByTotalFailureCount(Integer... values) {
        return fetch(TestRun.TEST_RUN.TOTAL_FAILURE_COUNT, values);
    }

    /**
     * Fetch records that have <code>passed IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestRun> fetchByPassed(Boolean... values) {
        return fetch(TestRun.TEST_RUN.PASSED, values);
    }

    /**
     * Fetch records that have <code>cumulative_duration IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestRun> fetchByCumulativeDuration(BigDecimal... values) {
        return fetch(TestRun.TEST_RUN.CUMULATIVE_DURATION, values);
    }

    /**
     * Fetch records that have <code>average_duration IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestRun> fetchByAverageDuration(BigDecimal... values) {
        return fetch(TestRun.TEST_RUN.AVERAGE_DURATION, values);
    }

    /**
     * Fetch records that have <code>slowest_test_case_duration IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestRun> fetchBySlowestTestCaseDuration(BigDecimal... values) {
        return fetch(TestRun.TEST_RUN.SLOWEST_TEST_CASE_DURATION, values);
    }

    /**
     * Fetch records that have <code>created_timestamp IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestRun> fetchByCreatedTimestamp(Timestamp... values) {
        return fetch(TestRun.TEST_RUN.CREATED_TIMESTAMP, values);
    }

    /**
     * Fetch records that have <code>has_assets IN (values)</code>
     */
    public List<projektor.database.generated.tables.pojos.TestRun> fetchByHasAssets(Boolean... values) {
        return fetch(TestRun.TEST_RUN.HAS_ASSETS, values);
    }
}
