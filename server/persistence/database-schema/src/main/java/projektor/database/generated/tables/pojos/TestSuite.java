/*
 * This file is generated by jOOQ.
 */
package projektor.database.generated.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TestSuite implements Serializable {

    private static final long serialVersionUID = -1495622208;

    private Long       id;
    private Long       testRunId;
    private Integer    idx;
    private String     packageName;
    private String     className;
    private Integer    testCount;
    private Integer    passingCount;
    private Integer    skippedCount;
    private Integer    failureCount;
    private Timestamp  startTs;
    private String     hostname;
    private BigDecimal duration;
    private String     systemOut;
    private String     systemErr;
    private Boolean    hasSystemOut;
    private Boolean    hasSystemErr;
    private Long       testSuiteGroupId;

    public TestSuite() {}

    public TestSuite(TestSuite value) {
        this.id = value.id;
        this.testRunId = value.testRunId;
        this.idx = value.idx;
        this.packageName = value.packageName;
        this.className = value.className;
        this.testCount = value.testCount;
        this.passingCount = value.passingCount;
        this.skippedCount = value.skippedCount;
        this.failureCount = value.failureCount;
        this.startTs = value.startTs;
        this.hostname = value.hostname;
        this.duration = value.duration;
        this.systemOut = value.systemOut;
        this.systemErr = value.systemErr;
        this.hasSystemOut = value.hasSystemOut;
        this.hasSystemErr = value.hasSystemErr;
        this.testSuiteGroupId = value.testSuiteGroupId;
    }

    public TestSuite(
        Long       id,
        Long       testRunId,
        Integer    idx,
        String     packageName,
        String     className,
        Integer    testCount,
        Integer    passingCount,
        Integer    skippedCount,
        Integer    failureCount,
        Timestamp  startTs,
        String     hostname,
        BigDecimal duration,
        String     systemOut,
        String     systemErr,
        Boolean    hasSystemOut,
        Boolean    hasSystemErr,
        Long       testSuiteGroupId
    ) {
        this.id = id;
        this.testRunId = testRunId;
        this.idx = idx;
        this.packageName = packageName;
        this.className = className;
        this.testCount = testCount;
        this.passingCount = passingCount;
        this.skippedCount = skippedCount;
        this.failureCount = failureCount;
        this.startTs = startTs;
        this.hostname = hostname;
        this.duration = duration;
        this.systemOut = systemOut;
        this.systemErr = systemErr;
        this.hasSystemOut = hasSystemOut;
        this.hasSystemErr = hasSystemErr;
        this.testSuiteGroupId = testSuiteGroupId;
    }

    public Long getId() {
        return this.id;
    }

    public TestSuite setId(Long id) {
        this.id = id;
        return this;
    }

    public Long getTestRunId() {
        return this.testRunId;
    }

    public TestSuite setTestRunId(Long testRunId) {
        this.testRunId = testRunId;
        return this;
    }

    public Integer getIdx() {
        return this.idx;
    }

    public TestSuite setIdx(Integer idx) {
        this.idx = idx;
        return this;
    }

    public String getPackageName() {
        return this.packageName;
    }

    public TestSuite setPackageName(String packageName) {
        this.packageName = packageName;
        return this;
    }

    public String getClassName() {
        return this.className;
    }

    public TestSuite setClassName(String className) {
        this.className = className;
        return this;
    }

    public Integer getTestCount() {
        return this.testCount;
    }

    public TestSuite setTestCount(Integer testCount) {
        this.testCount = testCount;
        return this;
    }

    public Integer getPassingCount() {
        return this.passingCount;
    }

    public TestSuite setPassingCount(Integer passingCount) {
        this.passingCount = passingCount;
        return this;
    }

    public Integer getSkippedCount() {
        return this.skippedCount;
    }

    public TestSuite setSkippedCount(Integer skippedCount) {
        this.skippedCount = skippedCount;
        return this;
    }

    public Integer getFailureCount() {
        return this.failureCount;
    }

    public TestSuite setFailureCount(Integer failureCount) {
        this.failureCount = failureCount;
        return this;
    }

    public Timestamp getStartTs() {
        return this.startTs;
    }

    public TestSuite setStartTs(Timestamp startTs) {
        this.startTs = startTs;
        return this;
    }

    public String getHostname() {
        return this.hostname;
    }

    public TestSuite setHostname(String hostname) {
        this.hostname = hostname;
        return this;
    }

    public BigDecimal getDuration() {
        return this.duration;
    }

    public TestSuite setDuration(BigDecimal duration) {
        this.duration = duration;
        return this;
    }

    public String getSystemOut() {
        return this.systemOut;
    }

    public TestSuite setSystemOut(String systemOut) {
        this.systemOut = systemOut;
        return this;
    }

    public String getSystemErr() {
        return this.systemErr;
    }

    public TestSuite setSystemErr(String systemErr) {
        this.systemErr = systemErr;
        return this;
    }

    public Boolean getHasSystemOut() {
        return this.hasSystemOut;
    }

    public TestSuite setHasSystemOut(Boolean hasSystemOut) {
        this.hasSystemOut = hasSystemOut;
        return this;
    }

    public Boolean getHasSystemErr() {
        return this.hasSystemErr;
    }

    public TestSuite setHasSystemErr(Boolean hasSystemErr) {
        this.hasSystemErr = hasSystemErr;
        return this;
    }

    public Long getTestSuiteGroupId() {
        return this.testSuiteGroupId;
    }

    public TestSuite setTestSuiteGroupId(Long testSuiteGroupId) {
        this.testSuiteGroupId = testSuiteGroupId;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final TestSuite other = (TestSuite) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (testRunId == null) {
            if (other.testRunId != null)
                return false;
        }
        else if (!testRunId.equals(other.testRunId))
            return false;
        if (idx == null) {
            if (other.idx != null)
                return false;
        }
        else if (!idx.equals(other.idx))
            return false;
        if (packageName == null) {
            if (other.packageName != null)
                return false;
        }
        else if (!packageName.equals(other.packageName))
            return false;
        if (className == null) {
            if (other.className != null)
                return false;
        }
        else if (!className.equals(other.className))
            return false;
        if (testCount == null) {
            if (other.testCount != null)
                return false;
        }
        else if (!testCount.equals(other.testCount))
            return false;
        if (passingCount == null) {
            if (other.passingCount != null)
                return false;
        }
        else if (!passingCount.equals(other.passingCount))
            return false;
        if (skippedCount == null) {
            if (other.skippedCount != null)
                return false;
        }
        else if (!skippedCount.equals(other.skippedCount))
            return false;
        if (failureCount == null) {
            if (other.failureCount != null)
                return false;
        }
        else if (!failureCount.equals(other.failureCount))
            return false;
        if (startTs == null) {
            if (other.startTs != null)
                return false;
        }
        else if (!startTs.equals(other.startTs))
            return false;
        if (hostname == null) {
            if (other.hostname != null)
                return false;
        }
        else if (!hostname.equals(other.hostname))
            return false;
        if (duration == null) {
            if (other.duration != null)
                return false;
        }
        else if (!duration.equals(other.duration))
            return false;
        if (systemOut == null) {
            if (other.systemOut != null)
                return false;
        }
        else if (!systemOut.equals(other.systemOut))
            return false;
        if (systemErr == null) {
            if (other.systemErr != null)
                return false;
        }
        else if (!systemErr.equals(other.systemErr))
            return false;
        if (hasSystemOut == null) {
            if (other.hasSystemOut != null)
                return false;
        }
        else if (!hasSystemOut.equals(other.hasSystemOut))
            return false;
        if (hasSystemErr == null) {
            if (other.hasSystemErr != null)
                return false;
        }
        else if (!hasSystemErr.equals(other.hasSystemErr))
            return false;
        if (testSuiteGroupId == null) {
            if (other.testSuiteGroupId != null)
                return false;
        }
        else if (!testSuiteGroupId.equals(other.testSuiteGroupId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.testRunId == null) ? 0 : this.testRunId.hashCode());
        result = prime * result + ((this.idx == null) ? 0 : this.idx.hashCode());
        result = prime * result + ((this.packageName == null) ? 0 : this.packageName.hashCode());
        result = prime * result + ((this.className == null) ? 0 : this.className.hashCode());
        result = prime * result + ((this.testCount == null) ? 0 : this.testCount.hashCode());
        result = prime * result + ((this.passingCount == null) ? 0 : this.passingCount.hashCode());
        result = prime * result + ((this.skippedCount == null) ? 0 : this.skippedCount.hashCode());
        result = prime * result + ((this.failureCount == null) ? 0 : this.failureCount.hashCode());
        result = prime * result + ((this.startTs == null) ? 0 : this.startTs.hashCode());
        result = prime * result + ((this.hostname == null) ? 0 : this.hostname.hashCode());
        result = prime * result + ((this.duration == null) ? 0 : this.duration.hashCode());
        result = prime * result + ((this.systemOut == null) ? 0 : this.systemOut.hashCode());
        result = prime * result + ((this.systemErr == null) ? 0 : this.systemErr.hashCode());
        result = prime * result + ((this.hasSystemOut == null) ? 0 : this.hasSystemOut.hashCode());
        result = prime * result + ((this.hasSystemErr == null) ? 0 : this.hasSystemErr.hashCode());
        result = prime * result + ((this.testSuiteGroupId == null) ? 0 : this.testSuiteGroupId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TestSuite (");

        sb.append(id);
        sb.append(", ").append(testRunId);
        sb.append(", ").append(idx);
        sb.append(", ").append(packageName);
        sb.append(", ").append(className);
        sb.append(", ").append(testCount);
        sb.append(", ").append(passingCount);
        sb.append(", ").append(skippedCount);
        sb.append(", ").append(failureCount);
        sb.append(", ").append(startTs);
        sb.append(", ").append(hostname);
        sb.append(", ").append(duration);
        sb.append(", ").append(systemOut);
        sb.append(", ").append(systemErr);
        sb.append(", ").append(hasSystemOut);
        sb.append(", ").append(hasSystemErr);
        sb.append(", ").append(testSuiteGroupId);

        sb.append(")");
        return sb.toString();
    }
}
